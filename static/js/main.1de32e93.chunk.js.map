{"version":3,"sources":["logo.svg","components/Header.js","img/content_img.jpg","components/CardImage.js","components/CustomCard.js","components/SettingsModal.js","actionTypes.js","components/SettingsCardModal.js","components/Content.js","actions/cards.js","App.js","reportWebVitals.js","reducers/cards.js","reducers/index.js","index.js"],"names":["Header","Container","fluid","className","Navbar","collapseOnSelect","expand","bg","variant","Brand","src","logo","width","height","alt","Collapse","id","Nav","NavDropdown","title","fontSize","drop","Item","Divider","onClick","elementsPosition","document","querySelectorAll","forEach","item","index","getBoundingClientRect","console","log","CardImage","props","type","value","style","background","borderRadius","CustomCard","element","useRef","useEffect","isResizing","content","querySelector","e","current","conditions","elementLeft","contentLeft","movement","elementWidth","contentRight","elementTop","contentTop","elementHeight","contentBottom","addEventListener","$event","window","mousemove","mouseup","removeEventListener","prevX","clientX","prevY","clientY","newX","newY","rect","contentRect","left","top","conditionLeft","movementX","right","conditionTop","movementY","bottom","currentResizer","resizers","target","elementRect","classList","contains","card","ref","currentCard","show","onDeleteCard","SettingsModal","useState","changeCards","setChangeCards","cards","cardList","map","isActive","newChangeCards","findIndex","handlerClick","onOpenSettingsCardModal","ReactDOM","createPortal","Modal","onHide","onClose","animation","closeButton","Title","Body","Footer","Button","onSubmit","getElementById","SET_CARDS","CHANGE_IS_ACTIVE","CHANGE_CARD_TYPE","SettingsCardModal","modalContent","Object","keys","length","onChangeCardType","Content","dispatch","useDispatch","setShow","setCurrentCard","useSelector","state","visibleCards","changeIsActive","push","Row","DropdownButton","Dropdown","contentImg","changedCards","setCards","cardType","changeCardType","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","cardsState","cardIndex","combineReducers","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","render"],"mappings":"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","file":"static/js/main.1de32e93.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import '../css/Header.css';\r\nimport logo from '../logo.svg'\r\nimport {Container, NavDropdown, Nav} from \"react-bootstrap\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport React from 'react';\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <Container fluid className=\"header p-0\">\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand>\r\n                    <img\r\n                        src={logo}\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        alt=\"InGrainDryer\"\r\n                    />\r\n                    <span className=\"app-name\">\r\n                        InGrainDryer\r\n                    </span>\r\n                </Navbar.Brand>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"ml-auto\">\r\n                        <NavDropdown title={\r\n                            <SettingsIcon fontSize=\"large\"/>\r\n                        } id=\"collasible-nav-dropdown\" drop=\"left\">\r\n                            <NavDropdown.Item >Настройки</NavDropdown.Item>\r\n                            <NavDropdown.Item>Выбор фона</NavDropdown.Item>\r\n                            <NavDropdown.Divider/>\r\n                            <NavDropdown.Item onClick={() => {\r\n                                let elementsPosition = {};\r\n                                const elements = document.querySelectorAll('.custom-card')\r\n                                elements.forEach((item, index) => {\r\n\r\n                                    elementsPosition[`element${index + 1}`] = item.getBoundingClientRect()\r\n                                })\r\n                                console.log(elementsPosition)\r\n                            }}>Выход из учетной записи</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </Container>\r\n    )\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/content_img.1e80386e.jpg\";","import '../css/CardImage.css';\r\nimport ToggleOnIcon from \"@material-ui/icons/ToggleOn\";\r\nimport ToggleOffIcon from \"@material-ui/icons/ToggleOff\";\r\nimport PowerSettingsNewRoundedIcon from \"@material-ui/icons/PowerSettingsNewRounded\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const CardImage = (props) => {\r\n    switch (props.type) {\r\n        case 'digital':\r\n            return (props.value)\r\n        case 'discrete':\r\n            if (props.value) {\r\n                return (<ToggleOnIcon fontSize={'large'}/>)\r\n            } else {\r\n                return (<ToggleOffIcon fontSize={'large'}/>)\r\n            }\r\n        case 'discrete2':\r\n            if (props.value) {\r\n                    return (<PowerSettingsNewRoundedIcon fontSize={'large'} style={{background: 'green', borderRadius: '50%'}}/>)\r\n            } else {\r\n                   return (<PowerSettingsNewRoundedIcon fontSize={'large'} style={{background: 'red', borderRadius: '50%'}}/>)\r\n            }\r\n    }\r\n\r\n}","import React, {useRef, useEffect} from \"react\";\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport '../css/CustomCard.css'\r\nimport {CardImage} from \"./CardImage\";\r\n\r\n\r\nexport const CustomCard = (props) => {\r\n    const element = useRef(null);\r\n    useEffect(() => {\r\n        let isResizing = false;\r\n        const content = document.querySelector('.content');\r\n        const e = element.current;\r\n        const conditions = {\r\n            left: ({ elementLeft, contentLeft, movement, elementWidth, contentRight }) => {\r\n                return (elementLeft > contentLeft && movement <= 0)\r\n                    || (elementLeft + elementWidth < contentRight && movement >= 0)\r\n            },\r\n            top: ({ elementTop, contentTop, movement, elementHeight, contentBottom }) => {\r\n                return (elementTop > contentTop && movement < 0)\r\n                    || (elementTop + elementHeight < contentBottom && movement > 0)\r\n            },\r\n        };\r\n        e.addEventListener('mousedown', drag);\r\n\r\n        function drag($event) {\r\n            window.addEventListener('mousemove', mousemove);\r\n            window.addEventListener('mouseup', mouseup);\r\n\r\n            let prevX = $event.clientX;\r\n            let prevY = $event.clientY;\r\n\r\n            function mousemove($event) {\r\n                if (!isResizing) {\r\n                    let newX = prevX - $event.clientX;\r\n                    let newY = prevY - $event.clientY;\r\n                    const rect = e.getBoundingClientRect();\r\n                    const contentRect = content.getBoundingClientRect();\r\n                    const left = rect.left - newX;\r\n                    const top = rect.top - newY;\r\n                    const conditionLeft = conditions.left({\r\n                        elementLeft: left,\r\n                        contentLeft: contentRect.left,\r\n                        movement: $event.movementX,\r\n                        elementWidth: rect.width,\r\n                        contentRight: contentRect.right,\r\n                    })\r\n                    const conditionTop = conditions.top({\r\n                        elementTop: top,\r\n                        contentTop: contentRect.top,\r\n                        movement: $event.movementY,\r\n                        elementHeight: rect.height,\r\n                        contentBottom: contentRect.bottom,\r\n                    })\r\n                    if (conditionLeft) {\r\n                        e.style.left = `${left}px`\r\n                    }\r\n                    if (conditionTop) {\r\n                        e.style.top = `${top}px`\r\n                    }\r\n                    prevX = $event.clientX;\r\n                    prevY = $event.clientY;\r\n                }\r\n            }\r\n\r\n            function mouseup() {\r\n                window.removeEventListener('mousemove', mousemove);\r\n                window.removeEventListener('mouseup', mouseup);\r\n            }\r\n        }\r\n\r\n\r\n        const resizers = e.querySelectorAll('.resizer');\r\n        let currentResizer;\r\n\r\n        for (let resizer of resizers) {\r\n            resizer.addEventListener('mousedown', resize);\r\n\r\n            function resize($event) {\r\n                isResizing = true;\r\n                currentResizer = $event.target;\r\n                let prevX = $event.clientX;\r\n                let prevY = $event.clientY;\r\n                window.addEventListener('mousemove', mousemove);\r\n                window.addEventListener('mouseup', mouseup);\r\n\r\n                function mousemove($event) {\r\n                    const rect = e.getBoundingClientRect();\r\n                    const elementRect = {\r\n                        top: rect.top,\r\n                        left: rect.left,\r\n                        height: rect.height,\r\n                        width: rect.width,\r\n                    };\r\n                    const contentRect = content.getBoundingClientRect();\r\n                    if (currentResizer.classList.contains(\"se\")) {\r\n                        elementRect.width = rect.width - (prevX - $event.clientX);\r\n                        elementRect.height = rect.height - (prevY - $event.clientY);\r\n                    } else if (currentResizer.classList.contains(\"sw\")) {\r\n                        elementRect.width = rect.width + (prevX - $event.clientX);\r\n                        elementRect.height = rect.height - (prevY - $event.clientY);\r\n                        elementRect.left = rect.left - (prevX - $event.clientX);\r\n                    } else if (currentResizer.classList.contains(\"ne\")) {\r\n                        elementRect.width = rect.width - (prevX - $event.clientX);\r\n                        elementRect.height = rect.height + (prevY - $event.clientY);\r\n                        elementRect.top = rect.top - (prevY - $event.clientY);\r\n                    } else if (currentResizer.classList.contains(\"nw\")) {\r\n                        elementRect.width = rect.width + (prevX - $event.clientX);\r\n                        elementRect.height = rect.height + (prevY - $event.clientY);\r\n                        elementRect.top = rect.top - (prevY - $event.clientY);\r\n                        elementRect.left = rect.left - (prevX - $event.clientX);\r\n                    }\r\n                    prevX = $event.clientX;\r\n                    prevY = $event.clientY;\r\n                    const conditionTop = conditions.top({\r\n                        elementTop: elementRect.top,\r\n                        elementHeight: elementRect.height,\r\n                        contentTop: contentRect.top,\r\n                        contentBottom: contentRect.bottom,\r\n                        movement: $event.movementY,\r\n                    });\r\n                    const conditionLeft = conditions.left({\r\n                        elementLeft: elementRect.left,\r\n                        elementWidth: elementRect.width,\r\n                        contentLeft: contentRect.left,\r\n                        contentRight: contentRect.right,\r\n                        movement: $event.movementX,\r\n                    });\r\n                    if (conditionTop)  {\r\n                        e.style.height = `${elementRect.height}px`;\r\n                        e.style.top = `${elementRect.top}px`;\r\n                    }\r\n                    if (conditionLeft)  {\r\n                        e.style.width = `${elementRect.width}px`;\r\n                        e.style.left = `${elementRect.left}px`;\r\n                    }\r\n                }\r\n\r\n                function mouseup() {\r\n                    window.removeEventListener('mousemove', mousemove);\r\n                    window.removeEventListener('mouseup', mouseup);\r\n                    isResizing = false;\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div id={props.card.id} ref={element} className={`custom-card elem-${props.card.id}`}>\r\n            <div className='resizer ne'/>\r\n            <div className='resizer nw'/>\r\n            <div className='resizer sw'/>\r\n            <div className='resizer se'/>\r\n\r\n            <SettingsRoundedIcon fontSize={'small'} className={'settings-card'} onClick={() => {\r\n                props.currentCard(props.card)\r\n                props.show('settingsCardModal')\r\n            }}/>\r\n            <div>\r\n                {props.card.title}\r\n            </div>\r\n           <div>\r\n               <CardImage value={props.card.value} type={props.card.type} />\r\n           </div>\r\n            <span onClick={() => props.onDeleteCard(props.card)}>&times;</span>\r\n        </div>\r\n    )\r\n};\r\n","import Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React, {useEffect, useState} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\";\r\n\r\nexport const SettingsModal = (props) => {\r\n    const [changeCards, setChangeCards] = useState([]);\r\n    useEffect(() => {\r\n        setChangeCards(props.cards)\r\n    }, [props.cards])\r\n    let cardImage;\r\n    const handlerClick = (item) => {\r\n\r\n        const newChangeCards = [...changeCards];\r\n        const index = newChangeCards.findIndex(({id}) => id === item.id);\r\n        newChangeCards[index].isActive = !newChangeCards[index].isActive;\r\n        setChangeCards(newChangeCards);\r\n    };\r\n    const handlerSubmitClick = () => {\r\n        props.onSubmit(changeCards);\r\n\r\n    }\r\n    const cardList = changeCards.map((item) => {\r\n        return (\r\n            <div\r\n                id={`selected-${item.id}`}\r\n                key={item.id}\r\n                className={`card mb-2 p-3 ${item.isActive ? 'bg-danger' : ''}`}\r\n            >\r\n                <div\r\n                    onClick={() => handlerClick(item)}\r\n                >\r\n                    {item.title}\r\n                </div>\r\n                <SettingsRoundedIcon fontSize={'small'} onClick={() => {\r\n                    props.currentCard(item)\r\n                    props.onOpenSettingsCardModal()\r\n                }}/>\r\n            </div>\r\n\r\n        )\r\n    })\r\n\r\n    return ReactDOM.createPortal(\r\n        <Modal show={props.show} onHide={props.onClose} animation={false}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Сушилка</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"flex flex-wrap\">\r\n                    {cardList}\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={props.onClose}>\r\n                    Отменить\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handlerSubmitClick}>\r\n                    Применить\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>, document.getElementById('root-modal')\r\n    );\r\n}\r\n","export const SET_CARDS = 'SET_CARDS';\r\nexport const CHANGE_IS_ACTIVE = 'CHANGE_IS_ACTIVE';\r\nexport const CHANGE_CARD_TYPE = 'CHANGE_CARD_TYPE';","import '../css/SettingsCardModal.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {CardImage} from \"./CardImage\";\r\nimport {NavDropdown} from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const SettingsCardModal = (props) => {\r\n    let modalContent = null;\r\n\r\n    if(Object.keys(props.currentCard).length > 0) {\r\n        modalContent = <div>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>\r\n                {props.currentCard.title}\r\n            </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div>\r\n                <NavDropdown title={\r\n                    'Тип переключателя'\r\n                } id=\"collasible-nav-dropdown\">\r\n                    <NavDropdown.Item onClick={() => props.onChangeCardType(props.currentCard, 'digital')}>Цифры</NavDropdown.Item>\r\n                    <NavDropdown title={'Переключатель'}>\r\n                        <NavDropdown.Item onClick={() => props.onChangeCardType(props.currentCard, 'discrete')}>Тип 1</NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={() => props.onChangeCardType(props.currentCard, 'discrete2')}>Тип 2</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </NavDropdown>\r\n            </div>\r\n            <CardImage value={props.currentCard.value} type={props.currentCard.type} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={props.onClose}>\r\n                Отменить\r\n            </Button>\r\n            <Button variant=\"primary\">\r\n                Применить\r\n            </Button>\r\n        </Modal.Footer>\r\n        </div>\r\n    } else {\r\n        modalContent = <div>\r\n            <Modal.Header closeButton />\r\n            <Modal.Body>\r\n                Карточка не найдена\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={props.onClose}>\r\n                    Закрыть\r\n                </Button>\r\n            </Modal.Footer>\r\n        </div>\r\n    }\r\n    return ReactDOM.createPortal (\r\n        <Modal show={props.show} onHide={props.onClose}>\r\n            { modalContent }\r\n        </Modal>,  document.getElementById('root-modal'))\r\n}","import '../css/Content.css';\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport contentImg from '../img/content_img.jpg';\r\nimport {CustomCard} from \"./CustomCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, {useState} from \"react\";\r\nimport {SettingsModal} from \"./SettingsModal\";\r\nimport {changeCardType, changeIsActive, setCards} from \"../actions/cards\";\r\nimport {SettingsCardModal} from \"./SettingsCardModal\";\r\n\r\nexport const Content = () => {\r\n    const dispatch = useDispatch();\r\n    const [show, setShow] = useState(false);\r\n    const [currentCard, setCurrentCard] = useState({});\r\n    const cards = useSelector(state => state.cards);\r\n    const visibleCards = [];\r\n    const onDeleteCard = (card) => {\r\n        dispatch(changeIsActive(card))\r\n    }\r\n    const onChangeCardType = (card, type) => {\r\n        dispatch(changeCardType(card,type))\r\n    }\r\n    const onSubmit = (changedCards) => {\r\n        dispatch(setCards(changedCards))\r\n        setShow(false);\r\n    }\r\n\r\n    cards.forEach(card => {\r\n        if(card.isActive === true) {\r\n            visibleCards.push(\r\n                <CustomCard key={card.id} card={card} onDeleteCard={onDeleteCard} show={setShow} currentCard={setCurrentCard}/>)\r\n        }\r\n    })\r\n    return (\r\n        <Container className={'content'} fluid>\r\n            <Row className={'content_left-panel'}>\r\n                <DropdownButton variant=\"secondary\" id=\"dropdown-basic-button\" title=\"Объекты\" className=\"mr-1\">\r\n                    <Dropdown.Item onClick={() => {\r\n                        setShow('settingsModal')\r\n                    }}>Сушилка</Dropdown.Item>\r\n                </DropdownButton>\r\n                <DropdownButton variant=\"secondary\" id=\"dropdown-basic-button\" title=\"Отчеты\">\r\n                    <Dropdown.Item>Работа ТС</Dropdown.Item>\r\n                    <Dropdown.Item>Сушилка</Dropdown.Item>\r\n                    <Dropdown.Item>Something else</Dropdown.Item>\r\n                </DropdownButton>\r\n            </Row>\r\n            { visibleCards }\r\n            <div className=\"content-img\">\r\n                <img\r\n                    src={contentImg}\r\n                    alt=\"Схема зерносушилки\"\r\n                />\r\n            </div>\r\n            <SettingsModal\r\n                show={show === 'settingsModal'}\r\n                onOpenSettingsCardModal = {() => {setShow('settingsCardModal')}}\r\n                onClose={() => {setShow('close')}}\r\n                onSubmit={onSubmit}\r\n                cards={cards}\r\n                currentCard={setCurrentCard}\r\n            />\r\n            <SettingsCardModal\r\n                show={show === 'settingsCardModal'}\r\n                onClose={() => {setShow('close')}}\r\n                currentCard={currentCard}\r\n                onChangeCardType={onChangeCardType}\r\n            />\r\n        </Container>\r\n    )\r\n};\r\n","import {CHANGE_IS_ACTIVE, SET_CARDS, CHANGE_CARD_TYPE} from \"../actionTypes\";\r\n\r\nexport const setCards = (cards) => ({ type: SET_CARDS, cards})\r\nexport const changeIsActive = (card) => ({type: CHANGE_IS_ACTIVE, card})\r\nexport const changeCardType = (card, cardType) => ({ type: CHANGE_CARD_TYPE, card, cardType})\r\n","import './css/App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from \"react\";\r\nimport { Header } from \"./components/Header\";\r\nimport { Content } from \"./components/Content\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Content/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CHANGE_CARD_TYPE, CHANGE_IS_ACTIVE, SET_CARDS} from '../actionTypes'\r\n\r\nconst cards = (state = [], action) => {\r\n    switch (action.type) {\r\n        case SET_CARDS:\r\n            return action.cards\r\n        case CHANGE_IS_ACTIVE:\r\n            const cards = [...state]\r\n            const index = cards.findIndex((element) => element.id === action.card.id)\r\n            cards[index].isActive = !cards[index].isActive\r\n            return cards\r\n        case CHANGE_CARD_TYPE:\r\n           const cardsState = [...state]\r\n           const cardIndex = cardsState.findIndex((element) => element.id === action.card.id)\r\n            cardsState[cardIndex].type = action.cardType\r\n            return cardsState\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cards;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport cards from './cards';\r\n\r\nexport default combineReducers({\r\n    cards,\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport reducers from './reducers'\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    {cards: [\r\n            {id: 1, title: 'Пример 1', value: '-5', isActive: false, type: 'digital'},\r\n            {id: 2, title: 'Пример 2', value: '', isActive: false, type: 'discrete2'},\r\n            {id: 3, title: 'Пример 3', value: '15512341', isActive: false, type: 'discrete'},\r\n            {id: 4, title: 'Пример 4', value: '123123', isActive: false, type: 'discrete2'}\r\n        ]},\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}